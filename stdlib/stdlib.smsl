#include "smsl.h"

import io

_open = open

class FileWrapper (
    func init[me, filename, mode] (
        me.filename = filename
        me.mode = mode
        if "w" in mode (
            me.writefile = _open[filename, "w"]
        )
        if "r" in mode (
            me.readfile = _open[filename, "r"]
        )
        if "a" in mode (
            me.writefile = _open[filename, "a"]
        )
        rem mode
    )

    func read[me] (
        try (
            return me.readfile.read[]
        )
        catch AttributeError (
            raise io.UnsupportedOperation["Not readable"]
        )
    )

    func write[me, text] (
        try (
            me.writefile.write[text]
            me.readfile.close[]
            me.readfile = _open[me.filename, "r"]
            me.writefile.close[]
            if "a" in me.mode (
                me.writefile = _open[me.filename, "a"]
            )
            else (
                me.writefile = _open[me.filename, "w"]
            )
        )
        catch AttributeError (
            raise io.UnsupportedOperation["Not writable"]
        )
    )
        
    func readlist[me] (
        return list[me.read[]]
    )
)

func open[filename, mode=None] (
    if mode == None (
        mode = "r"
    )
    
    return FileWrapper[filename, mode]
)
